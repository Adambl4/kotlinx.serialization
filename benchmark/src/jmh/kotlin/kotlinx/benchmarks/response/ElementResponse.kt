package response

import com.squareup.moshi.JsonClass
import kotlinx.serialization.Serializable

@Serializable
@JsonClass(generateAdapter = true)
data class ElementResponse(
        var id: String = "",
        // TODO replace with ElementType
        var type: ElementType = ElementType.UNKNOWN,
        var name: String? = null,
        var title: String? = null,
        var description: String? = null,
        var promoText: String? = null,
        var alias: String? = null,
        var assets: AssetListResponse? = null,
        var trailers: TrailerListResponse? = null,
        var covers: CoverElementHolderResponse? = null,
        var collectionItems: ElementRelationListResponse? = null,
        var collections: ElementRelationListResponse? = null,
        var needActivate: Boolean? = null,
        var subscriptionActivateDate: Long? = null,
        var basicCovers: BasicCoverElementHolderResponse? = null,
        var products: ProductListResponse? = null,
        var svodProducts: ProductListResponse? = null,
        var tvodProducts: ProductListResponse? = null,
        var expireDate: Long? = null,
        var parent: ElementRelationResponse? = null,
        var subscriptionBundle: Boolean? = null,
        var duration: Long? = null,
        var subscriptionStartDate: Long? = null,
        var subscriptionEndDate: Long? = null,
        var autoRenewEnabled: Boolean? = null,
        var contentCountDescription: String? = null,
        var subscriptionBoughtWithOffer: Boolean? = null,
        var seqNo: Int? = null,
        var originalName: String? = null,
        var worldReleaseDate: Long? = null,
        var ageAccessType: String? = null,
        var okkoRating: Float? = null,
        var inNovelty: Boolean? = null,
        var stickerText: String? = null,
        var releaseType: ElementReleaseType? = null,
        var freePreviewAvailable: Boolean? = null,
        var freePreviewPeriod: Long? = null,
        var freeContent: Boolean? = null,
        // TODO: what to do with caching?
        var children: ElementRelationListResponse? = null,
        var kinopoiskRating: Float? = null,
        var bookmarkDate: Long? = null,
        var playbackTimeMark: Long? = null,
        var lastStartingDate: Long? = null,
        /**
         * Date where we started watching
         */
        var startingDate: Long? = null,
        var consumeDate: Long? = null,
        var lastWatchedChildId: String? = null,
        var hasHdr: Boolean? = null,
        var hasHd: Boolean? = null,
        var hasFullHd: Boolean? = null,
        var hasUltraHd: Boolean? = null,
        var has3d: Boolean? = null,
        var hasDolby: Boolean? = null,
        var hasDolbyAtmos: Boolean? = null,
        var hasSound51: Boolean? = null,
        var inSubscription: Boolean? = null,
        var genres: GenreListResponse? = null,
        var countries: CountryListResponse? = null,
        var similar: ElementRelationListResponse? = null,
        var actors: PersonListResponse? = null,
        var directors: PersonListResponse? = null,
        var studios: StudioListResponse? = null,
        // sport section
        var tournament: ElementRelationResponse? = null,
        var sportSection: Boolean? = null,
        var externalEventId: String? = null,
        var externalEventDigitalId: Long? = null,
        var hasHighFps: Boolean? = null,
        var updateInSeconds: Int? = null,
        var onAir: ElementRelationResponse? = null,
        // game specific
        var featuredGames: ElementRelationResponse? = null,
        var audioLanguages: List<ContentLanguage>? = null,
        var subtitlesLanguages: List<ContentLanguage>? = null,
        var homeGoals: Int? = null,
        var awayGoals: Int? = null,
        var kickOffDate: Long? = null,
        var gameMinute: Int? = null,
        var gameStatus: String? = null,
        var catchupStartDate: Long? = null,
        var catchupEndDate: Long? = null,
        var tourNumber: Int? = null,
        var gameOfTheDay: Boolean? = null,
        var gameOfTheTour: Boolean? = null,
        var homeTeam: ElementRelationResponse? = null,
        var awayTeam: ElementRelationResponse? = null,
        var liveStartDate: Long? = null,
        var liveEndDate: Long? = null,
        var worldFeedStartDate: Long? = null,
        var worldFeedEndDate: Long? = null,
        var commentaryBy: String? = null,
        var stadium: String? = null,
        var referee: String? = null,
        // team specific
        var shortName: String? = null,
        var nickName: String? = null,
        var standingsPosition: Int? = null,
        var gamesPlayed: Int? = null,
        var gamesWon: Int? = null,
        var gamesDrawn: Int? = null,
        var gamesLost: Int? = null,
        var goalsFor: Int? = null,
        var goalsAgainst: Int? = null,
        var goalsDifference: String? = null,
        var points: Int? = null,
        var tours: ElementRelationListResponse? = null,
        var games: ElementRelationListResponse? = null,
        var teams: ElementRelationListResponse? = null,
        var programs: ElementRelationListResponse? = null,
        var activationRules: Set<ActivationRule>? = null,
        var allLiveContentTypes: List<LiveContentType>? = null,
        var subscriptionBillingStartDate: Long? = null,
        var seasonSubscriptionEndDate: Long? = null,
        var renewable: Boolean? = null,
        var upgradeable: Boolean? = null,
        var fullSeasonPriceText: String? = null,
        /**
         * Contains info if element is purchased
         */
        var licenses: LicenseListResponse? = null,
        var liveContentType: LiveContentType? = null,
        var subscriptionBoughtWithOfferInfo: OfferResponse? = null,
        var subscriptionBoughtWithOfferDate: Long? = null,
        var subscriptionLastBillingAmount: Double? = null,
        var renewalSubscription: ElementRelationResponse? = null,
        // FIXME
        var subscriptions: ElementRelationListResponse? = null,
        var sportPromoBannerHeaderText: String? = null,
        var sportPromoBannerBodyText: String? = null,
        var releaseSaleDate: Long? = null,
        var availableForFreeChild: ElementRelationResponse? = null,
        var sticker: StickerResponse? = null
)